this.config = {
  name: "callad",
  version: "1.0.1",
  author: { 
    name: "NTKhang", 
    contacts: ""
  },
  cooldowns: 5,
  role: 0,
  shortDescription: "g·ª≠i b√°o c√°o v·ªÅ admin bot",
  longDescription: "g·ª≠i b√°o c√°o, g√≥p √Ω, b√°o l·ªói,... c·ªßa b·∫°n v·ªÅ admin bot",
  category: "contacts admin",
  guide: "{prefix}{name} <tin nh·∫Øn>"
};
  
module.exports = {
  config: this.config,
  start: async function({ globalGoat, args, message, api, event, usersData, threadsData }) {
    if (!args[0]) return message.reply("Vui l√≤ng nh·∫≠p tin nh·∫Øn b·∫°n mu·ªën g·ª≠i v·ªÅ admin");
    const { senderID, threadID, isGroup } = event;
    
    const userData = await usersData.getData(senderID);
    const nameSender = userData.name;
    let msg = "==üì®Ô∏è B√°o c√°o üì®Ô∏è=="
    +`\n${userData.gender == 2 ? "üöπ" : "üö∫"} Name: ${nameSender}`
    +`\nüÜî User ID: ${senderID}`;
    
    msg += `\nüë®‚Äçüë©‚Äçüëß‚Äçüë¶ T·ª´ ` + isGroup ? `nh√≥m: ${(await threadsData.getData(threadID)).name}`
      +`\nüÜî Thread ID: ${threadID}` : "c√° nh√¢n";
      
    api.sendMessage({
      body: msg + `\nüÜé N·ªôi dung: ${args.join(" ")}\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nPh·∫£n h·ªìi tin nh·∫Øn n√†y ƒë·ªÉ g·ª≠i tin nh·∫Øn v·ªÅ ng∆∞·ªùi d√πng`,
      mentions: [{
        id: senderID,
        tag: nameSender
      }]
    }, globalGoat.config.adminBot[0], (err, info) => {
      if (err) return message.reply(`ƒê√£ x·∫£y ra l·ªói: ${err.name ? err.name + " " + err.message : err.errorSummary + "\n" + err.errorDescription}`);
      message.reply("ƒê√£ g·ª≠i b√°o c√°o c·ªßa b·∫°n v·ªÅ admin th√†nh c√¥ng");
      globalGoat.whenReply[info.messageID] = {
        nameCmd: this.config.name,
        messageID: info.messageID,
        messageIDSender: event.messageID,
        threadIDSender: threadID,
        type: "userCallAdmin"
      };
    });
  },
  
  whenReply: async ({ globalGoat, args, event, api, message, Reply, usersData }) => {
    const { messageIDSender, threadIDSender, type } = Reply;
    const nameSender = (await usersData.getData(event.senderID)).name;
    
    switch (type) {
      case "userCallAdmin":
        api.sendMessage({
          body: `üìç Ph·∫£n h·ªìi t·ª´ admin ${nameSender}\n${args.join(" ")}`
          + `\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nPh·∫£n h·ªìi tin nh·∫Øn n√†y ƒë·ªÉ ti·∫øp t·ª•c g·ª≠i tin nh·∫Øn v·ªÅ admin`,
          mentions: [{
            id: event.senderID,
            tag: nameSender
          }]
        }, threadIDSender, (err, info) => {
          if (err) return message.reply(`ƒê√£ x·∫£y ra l·ªói: ${err.name ? err.name + " " + err.message : err.errorSummary + "\n" + err.errorDescription}`);
          globalGoat.whenReply[info.messageID] = {
            nameCmd: this.config.name,
            messageID: info.messageID,
            messageIDSender: event.messageID,
            threadIDSender: event.threadID, 
            type: "adminReply"
          };
        }, messageIDSender);
        break;
      case "adminReply":
        api.sendMessage({
          body: `üìù Ph·∫£n h·ªìi t·ª´ ng∆∞·ªùi d√πng ${nameSender}:`
              + `\nüÜî: ${event.senderID}`
              + `\nüó£Ô∏è: ${nameSender}`
              + `\nN·ªôi dung:\n${args.join(" ")}`
              + `\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nPh·∫£n h·ªìi tin nh·∫Øn n√†y ƒë·ªÉ g·ª≠i tin nh·∫Øn v·ªÅ ng∆∞·ªùi d√πng`,
          mentions: [{
            id: event.senderID,
            tag: nameSender
          }]
        }, threadIDSender, (err, info) => {
          if (err) return message.reply(`ƒê√£ x·∫£y ra l·ªói: ${err.name ? err.name + " " + err.message : err.errorSummary + "\n" + err.errorDescription}`);
          globalGoat.whenReply[info.messageID] = {
            nameCmd: this.config.name,
            messageID: info.messageID,
            messageIDSender: event.messageID,
            threadIDSender: event.threadID, 
            type: "userCallAdmin"
          };
        }, messageIDSender);
        break;
      default:
        break;
    }
    
  }
};